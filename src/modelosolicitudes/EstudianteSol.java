package modelosolicitudes;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Types;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import static modelosolicitudes.Login.pass;
import static modelosolicitudes.Login.usuario;
import static modelosolicitudes.ModeloSolicitudes.conexion;
import static modelosolicitudes.ModeloSolicitudes.password;
import static modelosolicitudes.ModeloSolicitudes.server;
import static modelosolicitudes.ModeloSolicitudes.user;

/**
 *
 * @author Leand
 */
public class EstudianteSol extends javax.swing.JFrame {

    /**
     * Creates new form panel_control
     */
    
    //metodo para llenar primera tabla de esta clase
    
      
    
    
    
  
    
    public EstudianteSol() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jBRegresar = new javax.swing.JButton();
        jBInformacionBasica = new javax.swing.JButton();
        jBSolicitudes = new javax.swing.JButton();
        jBAsignaturas = new javax.swing.JButton();
        jBSol3 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPSolNAprobadas = new javax.swing.JPanel();
        jSPSolNAprobadas = new javax.swing.JScrollPane();
        jTSolNoAprobadas = new javax.swing.JTable();
        jBSolNAprobadas = new javax.swing.JButton();
        jLSolNAprobadas = new javax.swing.JLabel();
        jTSolNAprobadas = new javax.swing.JTextField();
        jPSolAprobadas = new javax.swing.JPanel();
        jSPSolAprobadas = new javax.swing.JScrollPane();
        jTSolAprobadas = new javax.swing.JTable();
        jBSolAprobadas = new javax.swing.JButton();
        jTFSolAprobadas = new javax.swing.JTextField();
        jLSolAprobadas = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estudiante", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N
        jPanel1.setName(""); // NOI18N

        jBRegresar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBRegresar.setText("Inicio");
        jBRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRegresarActionPerformed(evt);
            }
        });

        jBInformacionBasica.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBInformacionBasica.setText("Información Basica");
        jBInformacionBasica.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBInformacionBasica.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jBInformacionBasica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInformacionBasicaActionPerformed(evt);
            }
        });

        jBSolicitudes.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jBSolicitudes.setText("Solicitudes");
        jBSolicitudes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBSolicitudes.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jBSolicitudes.setSelected(true);

        jBAsignaturas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBAsignaturas.setText("Asignaturas");
        jBAsignaturas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBAsignaturas.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jBAsignaturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAsignaturasActionPerformed(evt);
            }
        });

        jBSol3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBSol3.setText("Eliminar Solicitudes");
        jBSol3.setAutoscrolls(true);
        jBSol3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBSol3.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jBSol3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSol3ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton8.setText("Consultar tipos de solicitudes");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jPSolNAprobadas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Solicitudes sin aprobar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jTSolNoAprobadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número", "Nombre del Secretario", "Fecha de recepción", "Tipo de solicitud", "Estado de la solicitud"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTSolNoAprobadas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSPSolNAprobadas.setViewportView(jTSolNoAprobadas);

        jBSolNAprobadas.setText("Justificación");
        jBSolNAprobadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSolNAprobadasActionPerformed(evt);
            }
        });

        jLSolNAprobadas.setText("Escriba el número de la solicitud en el siguiente recuadro y despues precione \"Justificación\" para observar la descripción de la solicitud.");

        jTSolNAprobadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTSolNAprobadasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPSolNAprobadasLayout = new javax.swing.GroupLayout(jPSolNAprobadas);
        jPSolNAprobadas.setLayout(jPSolNAprobadasLayout);
        jPSolNAprobadasLayout.setHorizontalGroup(
            jPSolNAprobadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSolNAprobadasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPSolNAprobadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSPSolNAprobadas, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                    .addGroup(jPSolNAprobadasLayout.createSequentialGroup()
                        .addComponent(jLSolNAprobadas, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPSolNAprobadasLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jTSolNAprobadas, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBSolNAprobadas)
                        .addGap(87, 560, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPSolNAprobadasLayout.setVerticalGroup(
            jPSolNAprobadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSolNAprobadasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSPSolNAprobadas, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLSolNAprobadas, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPSolNAprobadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTSolNAprobadas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBSolNAprobadas))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPSolAprobadas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Solicitudes aceptadas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jTSolAprobadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número", "Nombre del Secretario", "Fecha de recepción", "Tipo de solicitud", "Fecha Comité Cur.", "Fecha Consejo Fac."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTSolAprobadas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSPSolAprobadas.setViewportView(jTSolAprobadas);

        jBSolAprobadas.setText("Justificación");
        jBSolAprobadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSolAprobadasActionPerformed(evt);
            }
        });

        jTFSolAprobadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFSolAprobadasActionPerformed(evt);
            }
        });

        jLSolAprobadas.setText("Escriba el número de la solicitud en el siguiente recuadro y despues precione \"Justificación\" para observar la descripción de la solicitud.");

        javax.swing.GroupLayout jPSolAprobadasLayout = new javax.swing.GroupLayout(jPSolAprobadas);
        jPSolAprobadas.setLayout(jPSolAprobadasLayout);
        jPSolAprobadasLayout.setHorizontalGroup(
            jPSolAprobadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSolAprobadasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPSolAprobadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSPSolAprobadas)
                    .addGroup(jPSolAprobadasLayout.createSequentialGroup()
                        .addGroup(jPSolAprobadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLSolAprobadas)
                            .addGroup(jPSolAprobadasLayout.createSequentialGroup()
                                .addComponent(jTFSolAprobadas, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jBSolAprobadas)))
                        .addGap(0, 87, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPSolAprobadasLayout.setVerticalGroup(
            jPSolAprobadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSolAprobadasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSPSolAprobadas, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLSolAprobadas)
                .addGap(18, 18, 18)
                .addGroup(jPSolAprobadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBSolAprobadas)
                    .addComponent(jTFSolAprobadas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jBInformacionBasica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBAsignaturas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBSolicitudes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPSolAprobadas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPSolNAprobadas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addGap(131, 131, 131)
                        .addComponent(jBSol3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBRegresar)))
                .addGap(33, 33, 33))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jBInformacionBasica)
                        .addGap(156, 156, 156)
                        .addComponent(jBSolicitudes))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPSolNAprobadas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jBAsignaturas)
                        .addGap(55, 55, 55)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton8)
                            .addComponent(jBSol3)
                            .addComponent(jBRegresar)))
                    .addComponent(jPSolAprobadas, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    
    private String selectTipo (int id_sol ){
        String resultado = "";
        int usuarioID = Login.idUsuario;
        
        try {
            String SQL_call = "{CALL PA_select_tipo_est(?,?,?)}";
            //Statement s = conexion.createStatement();
            conexion = DriverManager.getConnection(server,user,password);
            CallableStatement cstmt = conexion.prepareCall(SQL_call); 
            cstmt.setInt(1 ,id_sol );
            cstmt.setInt(2 ,usuarioID );
            cstmt.registerOutParameter(3, Types.VARCHAR);
            cstmt.execute(); 
            resultado = cstmt.getString(3);

            //ResultSet procObr = s.executeQuery ("CAll PA_obra (300,1000,@CantActualizacion_obras)");
            System.out.println("Ejecutando procedimiento " + cstmt );
            System.out.println("Procedimiento Almacenado ejecutado con éxito  ..... OK");     
            System.out.println(resultado);
            return resultado ;
        } catch (SQLException ex) {
            System.out.println("Imposible realizar procedimento almacenado ... FAIL");

            }


        return resultado ;
    }
    
    private String selectComentarios (int id_sol ){
        String resultado = "";
        int usuarioID = Login.idUsuario;
        try {
            String SQL_call = "{CALL PA_select_comentarios_est(?,?,?)}";
            //Statement s = conexion.createStatement();
            conexion = DriverManager.getConnection(server,user,password);
            CallableStatement cstmt = conexion.prepareCall(SQL_call); 
            cstmt.setInt(1 ,id_sol );
            cstmt.setInt(2, usuarioID);
            cstmt.registerOutParameter(3, Types.VARCHAR);
            cstmt.execute(); 
            resultado = cstmt.getString(3);

            //ResultSet procObr = s.executeQuery ("CAll PA_obra (300,1000,@CantActualizacion_obras)");
            System.out.println("Ejecutando procedimiento " + cstmt );
            System.out.println("Procedimiento Almacenado ejecutado con éxito  ..... OK");     
            System.out.println(resultado);
            return resultado ;
        } catch (SQLException ex) {
            System.out.println("Imposible realizar procedimento almacenado ... FAIL");

            }


        return resultado ;
    }
    
    
    
    
    
    
    
    public void rellenar_tabla2(){
    String usuarioID = Login.usuario;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conexion = DriverManager.getConnection(server,user,password);
            
            // Statement st =  conexion.createStatement();
            String sql = "CALL proc_est_solicitudes_aceptadas(?)" ;
            CallableStatement st = conexion.prepareCall(sql);
            st.setString(1, usuarioID);
            st.execute();
            ResultSet rs = st.getResultSet();
            
            
            while (rs.next()) {   
                //Datos se agregaran hasta que finalice
                String NumeroSolicitud = String.valueOf(rs.getInt("sol_id"));
                String Nombre_Secretario = String.valueOf(rs.getString("Nombre_Secretario"));
                String Fecha_Solicitud = String.valueOf(rs.getDate("sol_Fecha"));
                String Tipo_Solicitud = String.valueOf(rs.getString("Tipo_Solicitud"));
                String Fecha_Comite = String.valueOf(rs.getString("Fecha_Comite_Curricular"));
                String Fecha_Consejo = String.valueOf(rs.getString("Fecha_Comite_Curricular"));
                
                //String Array para almacenar los datos en el Jtable
                
                String tbData[] = {NumeroSolicitud,Nombre_Secretario,Fecha_Solicitud,Tipo_Solicitud,Fecha_Comite,Fecha_Consejo};
                DefaultTableModel tblModel = (DefaultTableModel)jTSolAprobadas.getModel();
                
                //Finalmente se añade el lo contenido en el String Array al jtable
                
                tblModel.addRow(tbData);
                
            }
            
            System.out.println("Datos agregados a la tabla 2 Estudiante");
            //conexion.close();
        }catch(Exception e){
            System.out.println(e.getMessage()+ " No se pudo hacer la conexion");
        }
    }
    
        
    public void rellenar_tabla1(){
    String usuarioID = Login.usuario;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conexion = DriverManager.getConnection(server,user,password);
            
            // Statement st =  conexion.createStatement();
            String sql = "CALL proc_est_solicitudes_no_aceptadas(?)" ;
            CallableStatement st = conexion.prepareCall(sql);
            st.setString(1, usuarioID);
            st.execute();
            ResultSet rs = st.getResultSet();
            
            
            while (rs.next()) {   
                //Datos se agregaran hasta que finalice
                String NumeroSolicitud = String.valueOf(rs.getInt("sol_id"));
                String Nombre_Secretario = String.valueOf(rs.getString("Nombre_Secretario"));
                String Fecha_Solicitud = String.valueOf(rs.getDate("Fecha_Recepcion"));
                String Tipo_Solicitud = String.valueOf(rs.getString("TipoSolicitud"));
                String Estado_Solicitud = String.valueOf(rs.getString("Estado"));
                
                //String Array para almacenar los datos en el Jtable
                
                String tbData[] = {NumeroSolicitud,Nombre_Secretario,Fecha_Solicitud,Tipo_Solicitud,Estado_Solicitud};
                DefaultTableModel tblModel = (DefaultTableModel)jTSolNoAprobadas.getModel();
                
                //Finalmente se añade el lo contenido en el String Array al jtable
                
                tblModel.addRow(tbData);
                
            }
            
            System.out.println("Datos agregados a la tabla 1 Estudiante");
            //conexion.close();
        }catch(Exception e){
            System.out.println(e.getMessage()+ "No se pudo hacer la conexion");
        }
    }      
    
    
    private void jBRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRegresarActionPerformed
        Login est_log = new Login(); //nueva ventana inicial - volver a iniciar seción
        est_log.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBRegresarActionPerformed

    private void jBAsignaturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAsignaturasActionPerformed
        EstudianteAsignaturas est_asig = new EstudianteAsignaturas(); //nueva ventana de asignaturas
        est_asig.rellenar_tabla2();
        est_asig.setVisible(true);
        
        est_asig.rellenar_tabla1();
        this.dispose();
    }//GEN-LAST:event_jBAsignaturasActionPerformed

    private void jBInformacionBasicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInformacionBasicaActionPerformed
        EstudiantePersonalInfo est_info = new EstudiantePersonalInfo(); //nueva ventana de información personal
        est_info.setVisible(true);
        est_info.rellenar_tabla1();
        this.dispose();
    }//GEN-LAST:event_jBInformacionBasicaActionPerformed

    private void jTSolNAprobadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTSolNAprobadasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTSolNAprobadasActionPerformed

    private void jTFSolAprobadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFSolAprobadasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFSolAprobadasActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        TipoSolicitud est_tipo = new TipoSolicitud(); //nueva ventana de tipos de solicitudes
        est_tipo.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jBSol3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSol3ActionPerformed
        EstudianteDel est_del = new EstudianteDel(); //nueva ventana de eliminar solicitud
        est_del.setVisible(true);
        est_del.rellenar_tabla1();
        this.dispose();
    }//GEN-LAST:event_jBSol3ActionPerformed

    private void jBSolNAprobadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSolNAprobadasActionPerformed
        // input (aún no se ha hecho): la justificación(string), tipo de solicitud(string)
        int com_numero = Integer.parseInt( this.jTSolNAprobadas.getText());
        String comentarios = this.selectComentarios(com_numero);
        System.out.println(comentarios);
        String tipo = this.selectTipo(com_numero);
        
        
        ComentarioSolicitud est_com = new ComentarioSolicitud(); //nueva ventana de Comentario de solicitudes
        est_com.setVisible(true);
        if(comentarios != "Usted no ha hecho ninguna solicitud con ese número"){
            est_com.set_tipo(tipo);
        }
        
        est_com.set_textArea(comentarios);
        
        //this.dispose();
    }//GEN-LAST:event_jBSolNAprobadasActionPerformed

    private void jBSolAprobadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSolAprobadasActionPerformed
        // input (aún no se ha hecho): la justificación(string), tipo de solicitud(string)
         int com_numero = Integer.parseInt( this.jTFSolAprobadas.getText());
        String comentarios = this.selectComentarios(com_numero);// se guardan los comentarios
        System.out.println(comentarios);
        String tipo = this.selectTipo(com_numero);// se guarda el tipo
        
        
        ComentarioSolicitud est_com = new ComentarioSolicitud(); //nueva ventana de Comentario de solicitudes
        est_com.setVisible(true);
        if(comentarios != "Usted no ha hecho ninguna solicitud con ese número"){
            est_com.set_tipo(tipo);// se actualiza el tipo
        }
        
        est_com.set_textArea(comentarios);// se actualiza el comentario
        
        //this.dispose();
    }//GEN-LAST:event_jBSolAprobadasActionPerformed

        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EstudianteSol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EstudianteSol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EstudianteSol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EstudianteSol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EstudianteSol().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAsignaturas;
    private javax.swing.JButton jBInformacionBasica;
    private javax.swing.JButton jBRegresar;
    private javax.swing.JButton jBSol3;
    private javax.swing.JButton jBSolAprobadas;
    private javax.swing.JButton jBSolNAprobadas;
    private javax.swing.JButton jBSolicitudes;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLSolAprobadas;
    private javax.swing.JLabel jLSolNAprobadas;
    private javax.swing.JPanel jPSolAprobadas;
    private javax.swing.JPanel jPSolNAprobadas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jSPSolAprobadas;
    private javax.swing.JScrollPane jSPSolNAprobadas;
    private javax.swing.JTextField jTFSolAprobadas;
    private javax.swing.JTable jTSolAprobadas;
    private javax.swing.JTextField jTSolNAprobadas;
    private javax.swing.JTable jTSolNoAprobadas;
    // End of variables declaration//GEN-END:variables
}
